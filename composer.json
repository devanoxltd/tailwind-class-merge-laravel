{
    "name": "devanoxltd/tailwind-class-merge-laravel",
    "description": "TailwindClassMerge for Laravel merges multiple Tailwind CSS classes by automatically resolving conflicts between them",
    "keywords": ["laravel", "php", "tailwindcss", "merge", "classes"],
    "license": "MIT",
    "authors": [
        {
            "name": "Mr Chetan",
            "email": "contact@mrchetan.com"
        }
    ],
    "support": {
        "issues": "https://github.com/devanoxltd/tailwind-class-merge-laravel/issues",
        "source": "https://github.com/devanoxltd/tailwind-class-merge-laravel"
    },
    "require": {
        "php": "^8.2.0",
        "guzzlehttp/guzzle": "^7.8.1",
        "laravel/framework": "v10.41.0",
        "devanoxltd/tailwind-class-merge-php": "v1.1.0"
    },
    "require-dev": {
        "laravel/pint": "v1.13.9",
        "orchestra/testbench": "v8.20.0",
        "pestphp/pest": "v2.31.0",
        "pestphp/pest-plugin-arch": "v2.6.1",
        "pestphp/pest-plugin-mock": "^v2.0",
        "pestphp/pest-plugin-type-coverage": "v2.8.0",
        "phpstan/phpstan": "^1.10.56",
        "rector/rector": "^0.19.1",
        "symfony/var-dumper": "v6.4.2"
    },
    "autoload": {
        "psr-4": {
            "TailwindClassMerge\\Laravel\\": "src/"
        },
        "files": [
            "src/helpers.php"
        ]
    },
    "autoload-dev": {
        "psr-4": {
            "Tests\\": "tests/"
        }
    },
    "minimum-stability": "dev",
    "prefer-stable": true,
    "config": {
        "sort-packages": true,
        "preferred-install": "dist",
        "allow-plugins": {
            "pestphp/pest-plugin": true
        }
    },
    "extra": {
        "laravel": {
            "providers": [
                "TailwindClassMerge\\Laravel\\TailwindClassMergeServiceProvider"
            ]
        }
    },
    "scripts": {
        "refactor:lint": "pint -v",
        "refactor:rector": "rector",
        "test:lint": "pint --test -v",
        "test:refactor": "rector --dry-run",
        "test:types": "phpstan analyse --ansi",
        "test:type-coverage": "pest --type-coverage --min=100",
        "test:pest": "pest --colors=always",
        "test": [
            "@test:lint",
            "@test:refactor",
            "@test:types",
            "@test:type-coverage",
            "@test:pest"
        ],
        "refactor": [
            "@refactor:rector",
            "@refactor:lint"
        ]
    }
}
